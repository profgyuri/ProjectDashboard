<Application x:Class="ProjectDashboard.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProjectDashboard.WPF"
             xmlns:res="clr-namespace:ProjectDashboard.WPF.Resources"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml" x:ClassModifier="internal">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="LightBlue" SecondaryColor="Cyan" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Color x:Key="BackgroundColor">#252625</Color>
            <Color x:Key="StaticColor">#BABF2A</Color>
            <Color x:Key="InteractiveColor">#00BFFF</Color>
            <Color x:Key="VisualStudioHover">#555</Color>
            <Color x:Key="VisualStudioClick">#454545</Color>
            <Color x:Key="RiderHover">#3a3a3a</Color>
            <Color x:Key="RiderClick">#3a3a3a</Color>
            <SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource BackgroundColor}"/>
            <SolidColorBrush x:Key="StaticBrush" Color="{DynamicResource StaticColor}"/>
            <SolidColorBrush x:Key="InteractiveBrush" Color="{DynamicResource InteractiveColor}"/>
            <SolidColorBrush x:Key="VisualStudioHoverBrush" Color="{StaticResource VisualStudioHover}"/>
            <SolidColorBrush x:Key="VisualStudioClickBrush" Color="{StaticResource VisualStudioClick}"/>
            <SolidColorBrush x:Key="RiderHoverBrush" Color="{StaticResource RiderHover}"/>
            <SolidColorBrush x:Key="RiderClickBrush" Color="{StaticResource RiderClick}"/>
            <Style TargetType="res:CorneredButton" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="res:CorneredButton">
                            <Border 
                                x:Name="border"
                                CornerRadius="{TemplateBinding BorderRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Content="{TemplateBinding Content}" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource InteractiveBrush}" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
